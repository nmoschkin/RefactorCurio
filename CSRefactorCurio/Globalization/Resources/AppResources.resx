<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ABORT" xml:space="preserve">
    <value>Abort</value>
  </data>
  <data name="APPLY" xml:space="preserve">
    <value>Apply</value>
  </data>
  <data name="ASCENDING" xml:space="preserve">
    <value>Ascending</value>
  </data>
  <data name="BUILD" xml:space="preserve">
    <value>Build</value>
  </data>
  <data name="BUILD_PROJECT_FIRST" xml:space="preserve">
    <value>You need to build the project first.</value>
  </data>
  <data name="BUILD_SOLUTION" xml:space="preserve">
    <value>Build Solution</value>
  </data>
  <data name="CANCEL" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="CLASS" xml:space="preserve">
    <value>Class</value>
  </data>
  <data name="CLASSES" xml:space="preserve">
    <value>Classes</value>
  </data>
  <data name="COMBINE_SELECTED_FILES" xml:space="preserve">
    <value>Combine Selected Files</value>
  </data>
  <data name="COUNT" xml:space="preserve">
    <value>Count</value>
  </data>
  <data name="DESCENDING" xml:space="preserve">
    <value>Descending</value>
  </data>
  <data name="DETAILS" xml:space="preserve">
    <value>Details</value>
  </data>
  <data name="DIRECTORIES" xml:space="preserve">
    <value>Directories</value>
  </data>
  <data name="DIRECTORY" xml:space="preserve">
    <value>Directory</value>
  </data>
  <data name="DISABLED" xml:space="preserve">
    <value>Disabled</value>
  </data>
  <data name="ENABLED" xml:space="preserve">
    <value>Enabled</value>
  </data>
  <data name="ENUM" xml:space="preserve">
    <value>Enum</value>
  </data>
  <data name="ENUMS" xml:space="preserve">
    <value>Enums</value>
  </data>
  <data name="EXPAND_LIST" xml:space="preserve">
    <value>Expand List</value>
  </data>
  <data name="EXTRACT_SELECTED" xml:space="preserve">
    <value>Extract Selected</value>
  </data>
  <data name="FALSE" xml:space="preserve">
    <value>False</value>
  </data>
  <data name="FILE" xml:space="preserve">
    <value>File</value>
  </data>
  <data name="FILES" xml:space="preserve">
    <value>Files</value>
  </data>
  <data name="FOLDER" xml:space="preserve">
    <value>Folder</value>
  </data>
  <data name="FOLDERS" xml:space="preserve">
    <value>Folders</value>
  </data>
  <data name="INTERFACE" xml:space="preserve">
    <value>Interface</value>
  </data>
  <data name="INTERFACES" xml:space="preserve">
    <value>Interfaces</value>
  </data>
  <data name="MI_BUILD_SOLUTION" xml:space="preserve">
    <value>_Build Solution</value>
  </data>
  <data name="MI_MAP_DEPENDENCIES" xml:space="preserve">
    <value>_Map Dependencies</value>
  </data>
  <data name="NAME" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="NAMESPACE" xml:space="preserve">
    <value>Namespace</value>
  </data>
  <data name="NAMESPACES" xml:space="preserve">
    <value>Namespaces</value>
  </data>
  <data name="NEW_FILES_HERE" xml:space="preserve">
    <value>New Files Here</value>
  </data>
  <data name="NEW_FILES_IN_X" xml:space="preserve">
    <value>New Files Into '{0}'</value>
  </data>
  <data name="NEW_FILE_HERE" xml:space="preserve">
    <value>New Single FIle Here</value>
  </data>
  <data name="NEW_FILE_IN_X" xml:space="preserve">
    <value>New Single File Into '{0}'</value>
  </data>
  <data name="NO" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="NO_OBJECTS" xml:space="preserve">
    <value>(No Objects)</value>
  </data>
  <data name="OBJECT" xml:space="preserve">
    <value>Object</value>
  </data>
  <data name="OBJECT_TYPE" xml:space="preserve">
    <value>Object Type</value>
  </data>
  <data name="OK" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="ONE_OBJECT" xml:space="preserve">
    <value>(1 Object)</value>
  </data>
  <data name="OPEN_FILTER_DIALOG" xml:space="preserve">
    <value>Open Filter Dialog</value>
  </data>
  <data name="OPEN_OBJECT_IN_CODE" xml:space="preserve">
    <value>Open Object In Code</value>
  </data>
  <data name="PROCEED_CONFIRM" xml:space="preserve">
    <value>Do you wish to proceed?</value>
  </data>
  <data name="PROJECT" xml:space="preserve">
    <value>Project</value>
  </data>
  <data name="RECORD" xml:space="preserve">
    <value>Record</value>
  </data>
  <data name="RECORDS" xml:space="preserve">
    <value>Records</value>
  </data>
  <data name="REFRESH" xml:space="preserve">
    <value>Refresh</value>
  </data>
  <data name="RELOAD" xml:space="preserve">
    <value>Reload</value>
  </data>
  <data name="REORDER_ITEMS" xml:space="preserve">
    <value>Reorder Items</value>
  </data>
  <data name="REORGANIZE_FOLDER" xml:space="preserve">
    <value>Reorganize Folder</value>
  </data>
  <data name="REORGANIZE_PROJECT" xml:space="preserve">
    <value>Reorganize Project</value>
  </data>
  <data name="REORGANIZE_SOLUTION" xml:space="preserve">
    <value>Reorganize Solution</value>
  </data>
  <data name="REPORTS" xml:space="preserve">
    <value>Reports</value>
  </data>
  <data name="REPORT_CHOOSE_RESULT_TYPE" xml:space="preserve">
    <value>Choose Result Type</value>
  </data>
  <data name="REPORT_MOST_INTERDEPENDENT" xml:space="preserve">
    <value>Most Interdependent Namespaces</value>
  </data>
  <data name="REPORT_MOST_REFERENCED_OBJECTS" xml:space="preserve">
    <value>Most Referenced Objects</value>
  </data>
  <data name="REPORT_MOST_SPREAD_OUT" xml:space="preserve">
    <value>Most Spread Out Namespaces</value>
  </data>
  <data name="RESCAN" xml:space="preserve">
    <value>Rescan</value>
  </data>
  <data name="RESET" xml:space="preserve">
    <value>Reset</value>
  </data>
  <data name="RETRY" xml:space="preserve">
    <value>Retry</value>
  </data>
  <data name="RUN_SELECTED_REPORT" xml:space="preserve">
    <value>Run Selected Report</value>
  </data>
  <data name="SCAN" xml:space="preserve">
    <value>Scan</value>
  </data>
  <data name="SCAN_NOW" xml:space="preserve">
    <value>Scan Now</value>
  </data>
  <data name="SOLUTION" xml:space="preserve">
    <value>Solution</value>
  </data>
  <data name="SORT" xml:space="preserve">
    <value>SORT</value>
  </data>
  <data name="SORT_ORDER" xml:space="preserve">
    <value>Sort Order</value>
  </data>
  <data name="SPLIT_FILE_DEFAULT_OPTIONS" xml:space="preserve">
    <value>Split File With Default Options</value>
  </data>
  <data name="SPLIT_FILE_FLAT" xml:space="preserve">
    <value>Split File Here</value>
  </data>
  <data name="SPLIT_FILE_WITH_OPTIONS" xml:space="preserve">
    <value>Split File ...</value>
  </data>
  <data name="STRUCT" xml:space="preserve">
    <value>Struct</value>
  </data>
  <data name="STRUCTS" xml:space="preserve">
    <value>Structs</value>
  </data>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="TimeSource" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\..\Resources\TimeSource.txt;System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089;Windows-1252</value>
  </data>
  <data name="TRUE" xml:space="preserve">
    <value>True</value>
  </data>
  <data name="X_OBJECTS" xml:space="preserve">
    <value>({0} Objects)</value>
  </data>
  <data name="YES" xml:space="preserve">
    <value>Yes</value>
  </data>
</root>